Instructions:
  
 1. On each machine:

  1.1 Install julia
      $ wget https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.3-linux-x86_64.tar.gz
      $ tar zxvf julia-1.5.3-linux-x86_64.tar.gz
      modify ~/.bashrc by adding  
       export PATH="$PATH:/path/to/<Julia directory>/bin"
      $ source ~/.bashrc

  1.2 Install build-tools (necessary to build TriangleMesh.jl)
      $ sudo apt-get update && sudo apt-get install build-essential
 
  1.3 Install metis
      $ sudo apt-get install metis

  1.4 Change julia worker timeout, e.g., for 48 hrs, 
      modify ~/.bashrc by adding 
       export variable JULIA_WORKER_TIMEOUT=172800      
      $ source ~/.bashrc

  1.5 Set-up julia environment and precompile packages/modules
      $ julia -i Example00_SetUpEnvironment.jl
      if errors occur, do the following
      julia> Pkg.resolve()
      julia> Pkg.instantiate()
      julia> #precompile

  1.6 Type-in machine info in add_my_procs() of PllUtils.jl

 2. Set-up passwordless ssh between all machines.

 3. From master node:

  3.1 Create the directories ./data/ and ./img/  

  3.2 Launch example
  $ nohup time julia <NameOfExample.jl> 1> sim.out 2> err.out &

    

Description of examples:

Example00_SetUpEnvironment:
-activates and instantiates julia environment.

Example01_EllipticPde:
-assembles linear system of fem discretization for the heat equation
with a heterogeneous isotropic coefficient field using 2D P1 elements.

Example02_KarhunenLoeve:
-assembles (and solves) the generalized eigenvalue problem obtained by 
fem for the Karhunen-Loeve expansion of a Gaussian process.

Example03_EllipticPdeDomainDecomposition:
-prepares and assembles, or not, operators obtained by fem discretization for 
the heat equation with a heterogeneous isotropic coefficient field using 
non-overlaping domain decomposition.
-prepares and asembles, or not, corresponding preconditioners for both,
the original system A * u = b, as well as for the Schur complement system.
-shows effect of deflation on NeumannNeumannSchurPreconditioner for the 
Schur complement system of a toy problem.
-shows effect of deflation on LorascPreconditioner for A * u = b.
-shows lack of effect of deflation on AMGPreconditioner for A * u = b. 

Example04_KarhunenLoeveDomainDecomposition:
-uses domain decomposition to assemble (and solve) generalized eigenvalue 
problems obtained by fem for the "local" and "global" Karhunen-Loeve 
expansions of a Gaussian process.

Example05_KarhunenLoevePllDomainDecomposition:
-parallel implementation of the use of domain decomposition to assemble 
(and solve) generalized eigenvalue problems obtained by fem for the "local"
and "global" Karhunen-Loeve expansions of a Gaussian process.

Example06_PcgStochasticEllipticPde:
-assembles (and quickly re-assembles) linear systems of fem discretization 
for the heat equation with a heterogeneous isotropic lognormal coefficient field. 
-shows how to assemble constant preconditionners for given realizations. 
-shows effect of deflation on "median" LorascPreconditioner for A * u = b.
-Shows lack of effect of deflation on "median" AMGPreconditioner for A * u = b. 

Example07_PcgSchurStochasticEllipticPde:
-prepares (and quickly updates) Schur complement operators for the heat equation 
with a heterogeneous isotropic lognormal coefficient field. 
-shows how to assemble constant NeumannNeumannSchurPreconditioners for given 
 realizations. 
-shows effect of deflation on the "median" NeumannNeumannPreconditioner.

Example08_EllipticPdePllDomainDecomposition:
-work in progress.

Example09_DefPcgMcmcStochasticEllipticPde:
-mcmc sampling of lognormal coefficient field.
-applies deflation with online eigenvector approximation.


To do:
1. light pll for Lorasc? for NeumannNeumannPreconditioner?
2. Example09.
3. Example07, Example08
